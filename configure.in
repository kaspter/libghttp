AC_INIT(ghttp.h)

GHTTP_MAJOR_VERSION=1
GHTTP_MINOR_VERSION=0
GHTTP_MICRO_VERSION=9
GHTTP_VERSION=$GHTTP_MAJOR_VERSION.$GHTTP_MINOR_VERSION.$GHTTP_MICRO_VERSION

AC_SUBST(GHTTP_MAJOR_VERSION)
AC_SUBST(GHTTP_MINOR_VERSION)
AC_SUBST(GHTTP_MICRO_VERSION)
AC_SUBST(GHTTP_VERSION)

VERSION=$GHTTP_VERSION

AC_DEFINE_UNQUOTED(GHTTP_MAJOR_VERSION, $GHTTP_MAJOR_VERSION)
AC_DEFINE_UNQUOTED(GHTTP_MINOR_VERSION, $GHTTP_MINOR_VERSION)
AC_DEFINE_UNQUOTED(GHTTP_MICRO_VERSION, $GHTTP_MICRO_VERSION)

AM_INIT_AUTOMAKE(libghttp, $VERSION)

GHTTP_LIBDIR='-L${libdir}'
GHTTP_INCLUDEDIR='-I${includedir}'
GHTTP_LIBS="-lghttp"

AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL

AC_CANONICAL_HOST
case $host in
*-*-solaris*)
	GHTTP_LIBDIR="${GHTTP_LIBDIR} -R${libdir}"
	GHTTP_LIBS="${GHTTP_LIBS} -lsocket -lnsl"
	;;
esac

AC_ARG_WITH( ssl-dir,
  [  --with-ssl-dir=PATH	specify where to look for OpenSSL libraries],
	SSL_DIR="$with_ssl_dir",
	SSL_DIR="")

AC_SUBST(SSL_DIR)

AC_ARG_ENABLE( ssl,
  [  --enable-ssl	Compile with OpenSSL support ],
  AC_DEFINE(USE_SSL,1)
  using_ssl=yes,
  using_ssl=no)

if test "$using_ssl" = "yes"; then
  AC_CHECK_LIB(ssl, SSL_new,
               GHTTP_LIBS="${GHTTP_LIBS} -L${SSL_DIR}/lib -lssl -lcrypto"
	       GHTTP_INCLUDEDIR="${GHTTP_INCLUDEDIR} -I${SSL_DIR}/include",
	       AC_MSG_ERROR([Cannot find SSL libraries.  See the README for more info.]),
               -lcrypto)
fi

AC_SUBST(GHTTP_LIBDIR)
AC_SUBST(GHTTP_LIBS)
AC_SUBST(GHTTP_INCLUDEDIR)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([
libghttp.spec
Makefile])
